Kyle Zhang
kmzhang@ucsc.edu

Partner: Allen Cheung
Collaborated with: Only Allen

MY REPO CONTAINS THE FINAL VERSION OF THE PROJECT.

I WROTE:
-MESSAGE.C
-FIELD.C
-AGENTTEST.C
-NEGOTIATIONTEST.C

Please note we implemented the Field AI for extra credit, and it should beat the staff AI most of the time.
If you want to see it in action, you can uncomment the FieldPrint_UART statements inside Agent.c. We implemented
the AI so that the once the AI hits a ship, it should only pick spots where that ship could be and only pick a
random spot once it has sunk that ship.

Introduction:
Battleboats uses UART communication to send messages between the two boards. Once a message has been received,
that message is decoded, and based on what type of message that was, the Agent state machine should act accordingly
by either sending another message, changing the state, etc. The battleboats field is generated by FieldInit and
is represented by a grid. Based on the field state of each square on the grid, we should be able to place boats
or not place boats and the AI should guess or not guess that spot.

Summary:
I think overall this lab went very well. Based on what I heard from previous students, this lab was really rough.
However, I think it went a lot better than we expected. It was pretty smooth sailing until we had to test our
code between the two boards. Even then, the bugs we had to fix weren't super big and it ended up working out 
pretty well. I think the FieldPrint_UART was much more valuable than we thought. At first, we didn't implement
that function, but seeing exactly how the field looked at one point in time was super valuable for the implementation
or the AI functions.

Learned:
I learned a lot while doing this lab. I learned that I was very capable or doing large projects and also working
with other people on coding assignments. I also learned that coding can create really cool programs that are
worth working towards. As for the lab content, I learned about checksums and how to encrypt a code using a key
so that both parties can access the data. I also learned about a few useful functions like memset().

Liked:
I really enjoyed this lab despite it being pretty long. The end product was amazing to look at and it was very
exciting when we got our program to work all together. It was also fun designing the AI for the game, which makes
me believe I might enjoy working for a game design company or AI company of some sort in the future. Overall,
it was very interesting and because we were able to finish it in a decent amount of time, I would say it was 
definitely more enjoyable. I wouldn't really change much about this lab because I think it was pretty reasonable
for a "final" lab even though we technically have one more lab.